@model Emp_Intranet_UI.Models.DisplayModels.HomeDisplayModel

@Styles.Render("~/Content/Site.css")
@Scripts.Render("~/Scripts/Modal.js")
<div id="createModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeCreateModal()">&times;</span>
        <h2>Update User</h2>

        @using (Html.BeginForm("NewLeave", "Home", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <!-- Display validation errors -->
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <!-- New Leave Information -->
            <div class="form-group">
                @Html.LabelFor(model => model.MyLeaves.leave_startdate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyLeaves.leave_startdate, new { htmlAttributes = new { @class = "form-control", type = "Date" } })
                    @Html.ValidationMessageFor(model => model.MyLeaves.leave_startdate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MyLeaves.leave_enddate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyLeaves.leave_enddate, new { htmlAttributes = new { @class = "form-control", type = "Date" } })
                    @Html.ValidationMessageFor(model => model.MyLeaves.leave_enddate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MyLeaves.leave_reason, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyLeaves.leave_reason, new { htmlAttributes = new { @class = "form-control", type = ""} })
                    @Html.ValidationMessageFor(model => model.MyLeaves.leave_reason, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MyLeaves.leave_comment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyLeaves.leave_comment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MyLeaves.leave_comment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MyLeaves.leave_daystaken, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyLeaves.leave_daystaken, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MyLeaves.leave_daystaken, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MyLeaves.employeeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyLeaves.employeeID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MyLeaves.employeeID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MyLeaves.leavetypeid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyLeaves.leavetypeid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MyLeaves.leavetypeid, "", new { @class = "text-danger" })
                </div>
            </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MyLeaves.type_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.MyLeaves.type_name, new SelectList(Model.LeaveTypes, "type_name", "type_name"), "-- Select Status --",  new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MyLeaves.type_name, "", new { @class = "text-danger" })
                    </div>
                </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.MyLeaves.type_cycle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyLeaves.type_cycle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MyLeaves.type_cycle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MyLeaves.type_days, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MyLeaves.type_days, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MyLeaves.type_days, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
